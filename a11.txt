*******Assignment 11 *****************

DESCRIPTION
Read the below given scenario and add functionality in service class to write employee objects into a File as a function named writeEmployeeToFile() that should store the employee details only of a employee object that is passed as an argument to the function in a file named EmployeeDetails.txt  on the location /code/workspace.

Make sure the txt file contains details of only one employee else your solution will be rejected.

Scenario:
Case Study: Employee Medical Insurance Scheme:
By default, all employees in an organization will be assigned with a medical insurance scheme based on the salary range and designation of the employee. Refer the following table to find the eligible insurance scheme specific to an employee.
Salary             | Designation      | Insurance scheme
>5000 and < 20000  | System Associate | scheme c
>=20000 and <40000 | Programmer       | scheme b
>=40000            | Manager          | scheme a
<5000              | Clerk            | no scheme

On the basis of above case study implement a class to accept multiple employee details and store all employee objects in a HashMap. The functionalities need to be implemented are as follows:

Add employee details to HashMap.
Accept insurance scheme from user and display employee details based on Insurance scheme.
Delete an employee details from map.
Note: Refer the code stub for more clarity.




******************CODE****************************

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;

 class Employee {

     String name;
      double salary;
      Integer id;
      String Designation;
      public String InsuranceScheme;

      public Employee(String name,double salary,Integer id,String Designation) {
      this.name=name;
      this.salary=salary;
      this.id=id;
      this.Designation=Designation;
      InsuranceScheme=getInsuranceScheme(salary);
      }

      public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getDesignation() {
        return Designation;
    }

    public void setDesignation(String designation) {
        Designation = designation;
    }

    public String getInsuranceScheme() {
        return InsuranceScheme;
    }

    public void setInsuranceScheme(String insuranceScheme) {
        InsuranceScheme = insuranceScheme;
    }

    public String getInsuranceScheme(double salary) {
        //write your code here to return the scheme on the basis of salary
        if(salary>5000 && salary<20000){
            InsuranceScheme="scheme c";
        }
        else if(salary>=20000 && salary<40000){
            InsuranceScheme="scheme b";
        }
        else if(salary>=40000){
            InsuranceScheme= "scheme a";
        }
       else{
       InsuranceScheme="null";
        //if nothing falls in the range return null 
      }
        return InsuranceScheme;
        }
      public String toString(){
        return "Name: " + name + " Id: " + id + " Salary: " + salary + " Designation: " + Designation
            + " InsuranceScheme: " + InsuranceScheme;
      }
    }


    class EmployeeServiceImpl  {

          Employee e=new Employee("shravya",12000,1,"Clerk");
        HashMap<Integer,Employee> employeeMap;
      //Declare a Hashmap here where key is an Integer and the value is Employee object

      public void addEmployee(Employee emp) {
        
        //employeeMap.putAll(employeeMap);  
          employeeMap.put(emp.id, emp);
        //write your code here to add employee to the hashmap 

      }

      public boolean deleteEmployee(int id){
          if(id==e.id){
              employeeMap.remove(e);
              return true;
          }
          else 
              return false;

        //write your code here for returning true if the employee deleted wrt the id passed else false
          }
      

      public String ShowEmpDetails(String InsuranceScheme) {
          String s = null;
        if(InsuranceScheme=="scheme a"){
            s= "Name: " + e.name + " Id: " + e.id + " Salary: " + e.salary + " Designation: " + e.Designation+
            "InsuranceScheme: " +e.InsuranceScheme;
                   
        }
        else if(InsuranceScheme=="scheme b"){
            s= "Name: " + e.name + " Id: " + e.id + " Salary: " + e.salary + " Designation: " + e.Designation
                +"InsuranceScheme: " +e.InsuranceScheme;
              
        }
        else if(InsuranceScheme=="scheme b"){
            s= "Name: " + e.name + " Id: " + e.id + " Salary: " + e.salary + " Designation: " + e.Designation;
                    
        }
        else 
            s="null";
        return s;
        //Write your code here to return a string i.e the employee details according to the insurance scheme
        //Format: Name: name Id: id Salary: salary Designation: Designation InsuranceScheme: InsuranceScheme
        //If multiple results they should be in a different line
      }

      public void writeEmployeeToFile(Employee employee) throws IOException{
         // Employee e=new Employee();
          File f=new File("EmployeeDetails.txt");
        FileWriter fs=new FileWriter(f);
    fs.write(employee.toString());
        //Write your code here 
        //make use of toString Method to write the employee details in the file
          
      }

    }